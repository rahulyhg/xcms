<?php

/**
 * @file
 */

/**
 * Implements hook_init().
 */
function user_init() {
  global $user;
  $user = user_load_by_name(issetor($_COOKIE['name']));
}

/**
 * Implements hook_menu().
 */
function user_menu() {

  $items['user'] = array(
    'title' => 'Account',
    'callback' => 'user_page',
    'file' => 'core/modules/user/user.pages.inc',
    'access' => TRUE,
  );

  $items['user/%'] = array(
    'title' => 'Account',
    'callback' => 'user_page',
    'file' => 'core/modules/user/user.pages.inc',
    'access' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['user/%/edit'] = array(
    'title' => 'Edit',
    'callback' => 'user_account_page',
    'file' => 'core/modules/user/user.pages.inc',
    'access' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
  );

  $items['user/login'] = array(
    'title' => 'Login',
    'callback' => 'user_login_page',
    'file' => 'core/modules/user/user.pages.inc',
    'access' => 'user_is_anonymous',
  );

  $items['user/logout'] = array(
    'callback' => 'user_logout_page',
    'file' => 'core/modules/user/user.pages.inc',
    'access' => 'user_is_logged_in',
  );

  $items['admin/user'] = array(
    'title' => 'Users',
    'callback' => 'user_admin_page',
    'file' => 'core/modules/user/user.admin.inc',
    'access' => 'user_is_admin',
  );

  return $items;
}

/**
 *
 */
function user_logout() {
  setcookie('name', '', strtotime('-1 month'), '/');
  // session_destroy();
}

/**
 * TODO - this is not needed!
 */
function user_load_all() {
  return db_query('SELECT * FROM users ORDER BY uid')->fetchAll(PDO::FETCH_OBJ);
}

/**
 * Loads a user object.
 */
function user_load($uid) {
  return db_query('SELECT * FROM users WHERE uid = :uid', array(':uid' => $uid))->fetchObject();
}

/**
 * Save changes to a user account or add a new user.
 */
function user_save($account, $edit = array()) {

  // TODO - make this a reusable function.
  $placeholders = array();
  $args = array();
  foreach ($edit as $key => $value) {
    $placeholders[] = $key . ' = :' . $key;
    $args[':' . $key] = $value;
  }

  // TODO - if no uid / uid=0. query next id from users-uid (need user_save to create new users)
  $args[':uid'] = $account->uid;

  db_query('UPDATE users SET ' . implode(', ', $placeholders) . ' WHERE uid = :uid', $args);
}

/**
 * Fetch a user object by account name.
 */
function user_load_by_name($name) {
  return db_query('SELECT * FROM users WHERE name = :name', array(':name' => $name))->fetchObject();
}

/**
 * Try to validate the user's login credentials locally.
 */
function user_authenticate($name, $pass) {
  $account = user_load_by_name($name);
  if (isset($account->pass) && $account->pass == md5($pass)) {
    return TRUE;
  }
}

/**
 *
 */
function user_session($name) {
  // session_start();
  setcookie('name', $name, strtotime('+1 month'), '/');
}

/**
 * Determines if the current user is logged in.
 */
function user_is_logged_in() {
  return isset($_COOKIE['name']);
}

/**
 * Determines if the current user is anonymous.
 */
function user_is_anonymous() {
  return !user_is_logged_in();
}

/**
 *
 */
function user_is_admin() {
  global $user;
  if (issetor($user->uid, 0) == 1) {
    return TRUE;
  }
}

